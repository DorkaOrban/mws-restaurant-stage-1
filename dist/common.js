function browserCompatibilitywithServiceWorkers(){return!!navigator.serviceWorker||(console.log("The Service Worker is not compatible with this browser!"),!1)}function registerServiceWorker(){browserCompatibilitywithServiceWorkers()&&(console.log("The Service Worker is compatible with this browser!"),navigator.serviceWorker.register("sw.js").then(a=>{console.log("Service Worker registration successful with scope: ",a.scope)}).catch(()=>{console.log("Service Worker registration failed: ",err)}),navigator.serviceWorker.ready.then(a=>{const b=new MessageChannel;return b.port1.onmessage=c=>{console.log(c),handleChannelMessage(c.data)},mySW=a.active,mySW.postMessage("hello",[b.port2]),a.sync.register("myFirstSync")}))}function checkServiceWorkerController(){browserCompatibilitywithServiceWorkers()&&(navigator.serviceWorker.controller?console.log("This page is currently controlled by: ",navigator.serviceWorker.controller):console.log("This page is not currently controlled by a service worker."))}window.addEventListener("load",function(){-1<navigator.userAgent.toLowerCase().indexOf("firefox")&&"undefined"!=typeof document.getElementById("restaurants-list")&&null!==document.getElementById("restaurants-list")&&(document.getElementById("restaurants-list").style.marginLeft="-43px"),registerServiceWorker(),checkServiceWorkerController();let a=document.querySelectorAll(".jsHomeLink");for(const b of a)b.href=`./`;this.fetch("404.html").catch(b=>{if("TypeError"===b.name){let c=document.querySelector(".map-offline-placeholder"),d=document.getElementById("map");null!=c&&null!=d&&(d.style.display="none",c.style.display="block")}})});