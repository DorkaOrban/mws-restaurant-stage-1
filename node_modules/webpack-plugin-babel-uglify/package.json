{
  "_args": [
    [
      {
        "raw": "webpack-plugin-babel-uglify",
        "scope": null,
        "escapedName": "webpack-plugin-babel-uglify",
        "name": "webpack-plugin-babel-uglify",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\xampp\\htdocs\\restaurantreviewapp"
    ]
  ],
  "_from": "webpack-plugin-babel-uglify@latest",
  "_id": "webpack-plugin-babel-uglify@1.0.0",
  "_inCache": true,
  "_location": "/webpack-plugin-babel-uglify",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-plugin-babel-uglify_1.0.0_1520441312236_0.20163662722564224"
  },
  "_npmUser": {
    "name": "dhmk083",
    "email": "dhmk083@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "webpack-plugin-babel-uglify",
    "scope": null,
    "escapedName": "webpack-plugin-babel-uglify",
    "name": "webpack-plugin-babel-uglify",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-plugin-babel-uglify/-/webpack-plugin-babel-uglify-1.0.0.tgz",
  "_shasum": "826f76aee22a497a758ff8e0b4e598d92407a207",
  "_shrinkwrap": null,
  "_spec": "webpack-plugin-babel-uglify",
  "_where": "C:\\xampp\\htdocs\\restaurantreviewapp",
  "author": {
    "name": "dhmk083",
    "email": "dhmk083@gmail.com"
  },
  "dependencies": {},
  "description": "Transpiles and minifies emitted js files",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.3",
    "babel-preset-env": "^1.6.1",
    "uglify-js": "^3.3.12",
    "webpack": "^4.0.1",
    "webpack-cli": "^2.0.10"
  },
  "directories": {},
  "dist": {
    "shasum": "826f76aee22a497a758ff8e0b4e598d92407a207",
    "tarball": "https://registry.npmjs.org/webpack-plugin-babel-uglify/-/webpack-plugin-babel-uglify-1.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 4666
  },
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dhmk083",
      "email": "dhmk083@gmail.com"
    }
  ],
  "name": "webpack-plugin-babel-uglify",
  "optionalDependencies": {},
  "peerDependencies": {
    "babel-core": "^6.26.0",
    "uglify-js": "^3.3.12",
    "webpack": "^4.0.1"
  },
  "readme": "What it does\r\n============\r\n\r\nTranspiles every emitted asset that has `.js` extension with `babel-core` and then minifies it with `uglify-js`.\r\n\r\nWhy\r\n===\r\n\r\nTo use a full power of webpack's tree-shaking and thus have a minimal possible bundle's size you should ensure two things:\r\n- import from es6 modules\r\n- keep webpack's output in es6\r\n\r\nBecause this is how webpack works:\r\n- it concatenates all imported modules and your code into a single file\r\n- marks unused imports with special tags\r\n- in production uses uglify plugin which strips all tokens marked as unused\r\n\r\nNow, the problem is that if you use `babel-loader`, it transpiles each file into es5 and each class into a function. \r\nAnd webpack can not mark that transpiled classes as unused. (Of course this may change in the future). \r\nSo, in this scenario all unused classes will remain in the final bundle. You can read more about it in this [article][1].\r\n\r\nThe idea of this plugin is that you will keep webpack's output as es6, then minify it. This time unused classes will be removed. \r\nAnd after that, to get es5 compatible bundle you will use this plugin, which transpiles es6 to es5 and then minifies again. \r\nSo, in the end you will have transpiled and maximally compressed file.\r\n\r\nYou can run `npm test` command to compare sizes of produced files.\r\n\r\nOf course, you could just write a small build script, which will do the same. But this plugin might be more convenient to use on different platforms.\r\n\r\nUsage\r\n=====\r\n\r\nAs webpack 4 now uses minifier which understands es6 (webpack 3 can not), your config simplifies to this:\r\n\r\n```javascript\r\nconst BabelUglifyPlugin = require('webpack-plugin-babel-uglify')\r\n\r\nmodule.exports = {\r\n    ...\r\n    plugins: [\r\n        new BabelUglifyPlugin(x) // undefined - use defaults: env preset + sourceMaps\r\n                                 // `true` - use .babelrc or package.json (default babel lookup)\r\n                                 // {} - use these options\r\n    ]\r\n}\r\n```\r\n\r\nand then invoke like this:\r\n\r\n`webpack --mode=production`\r\n\r\nTodo\r\n====\r\n\r\nAdd ability to filter input .js files?\r\n\r\nLicense\r\n=======\r\n\r\nMIT\r\n\r\n[1]: https://blog.craftlab.hu/how-to-do-proper-tree-shaking-in-webpack-2-e27852af8b21",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "webpack --config=test/this-plugin.config.js --mode=production && webpack --config=test/babel-modules-false.config.js --mode=production"
  },
  "version": "1.0.0"
}
